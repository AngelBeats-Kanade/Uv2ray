<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDescription" xml:space="preserve">
    <value>Uv2ray</value>
    <comment>Application description</comment>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Uv2ray</value>
    <comment>Application display name</comment>
  </data>
  <data name="FeedbackHub_Link.Content" xml:space="preserve">
    <value>反馈</value>
    <comment>Displayed as the link to launching the Feedback Hub.</comment>
  </data>
  <data name="FirstRunDialog.PrimaryButtonText" xml:space="preserve">
    <value>确定</value>
    <comment>First use prompt message primary button text</comment>
  </data>
  <data name="FirstRunDialog.Title" xml:space="preserve">
    <value>欢迎</value>
    <comment>First use prompt message title</comment>
  </data>
  <data name="FirstRun_Body.Text" xml:space="preserve">
    <value>Replace the content of this dialog with whatever content is appropriate to your app.
You might want to explain key features or functionality.
Don't feel restricted to just text. You can also include images and animations if you wish too.

Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.

Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.

Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.

Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.</value>
    <comment>First use prompt message body</comment>
  </data>
  <data name="Help_BrowserBackButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>后退</value>
    <comment>WebView back button automation name property for Help</comment>
  </data>
  <data name="Help_BrowserBackButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>后退</value>
    <comment>Back button automation tooltip property for Help</comment>
  </data>
  <data name="Help_BrowserForwardButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>前进</value>
    <comment>Forward button automation name property for Help</comment>
  </data>
  <data name="Help_BrowserForwardButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>前进</value>
    <comment>Forward button automation tooltip property for Help</comment>
  </data>
  <data name="Help_FailedMessage.Text" xml:space="preserve">
    <value>页面加载失败。请检查网络连接并重试。</value>
    <comment>Load failure message for Help</comment>
  </data>
  <data name="Help_Loading.Text" xml:space="preserve">
    <value>加载中...</value>
    <comment>Loading message for Help</comment>
  </data>
  <data name="Help_OpenInBrowserButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>在浏览器中打开</value>
    <comment>Open in browser button automation name property for Help</comment>
  </data>
  <data name="Help_OpenInBrowserButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>在浏览器中打开</value>
    <comment>Open in browser button automation tooltip property for Help</comment>
  </data>
  <data name="Help_RefreshBrowserButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>刷新</value>
    <comment>Refresh button automation name property for Help</comment>
  </data>
  <data name="Help_RefreshBrowserButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>刷新</value>
    <comment>Refresh button automation tooltip property for Help</comment>
  </data>
  <data name="Help_Retry.Content" xml:space="preserve">
    <value>重试</value>
    <comment>Retry button for Help</comment>
  </data>
  <data name="Servers.ListHeader" xml:space="preserve">
    <value>服务器</value>
    <comment>Title for ServersPage</comment>
  </data>
  <data name="Servers_NoSelection.Text" xml:space="preserve">
    <value>从列表中选取一个物品</value>
    <comment>No selection text for Servers</comment>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>关于</value>
    <comment>About this application title for Settings</comment>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>Uv2ray是基于UWP构建的新v2ray客户端，支持大部分v2ray的功能。得益于fluent design这一现代化的设计语言，Uv2ray的界面简洁漂亮，易于使用。U2ray基于MIT协议开源，欢迎大家到GitHub上Fork和PR。</value>
    <comment>About this application description for Settings</comment>
  </data>
  <data name="Settings_LicenseLink.Content" xml:space="preserve">
    <value>软件许可</value>
    <comment>Privacy Statement link content for Settings</comment>
  </data>
  <data name="Settings_LicenseLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/AngelBeats-Kanade/Uv2ray/blob/main/LICENSE</value>
    <comment>Here is your Privacy Statement url for Settings</comment>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>个性化</value>
    <comment>Personalization text for Settings</comment>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>主题</value>
    <comment>Choose theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
    <comment>Dark theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Windows default</value>
    <comment>Windows default theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
    <comment>Light theme text for Settings</comment>
  </data>
  <data name="Settings_Version.Text" xml:space="preserve">
    <value>版本:</value>
  </data>
  <data name="Shell_Help.Content" xml:space="preserve">
    <value>帮助</value>
    <comment>Navigation view item name for Help</comment>
  </data>
  <data name="Shell_Home.Content" xml:space="preserve">
    <value>主页</value>
    <comment>Navigation view item name for Home</comment>
  </data>
  <data name="Shell_Servers.Content" xml:space="preserve">
    <value>服务器</value>
    <comment>Navigation view item name for Servers</comment>
  </data>
  <data name="WhatsNewDialog.PrimaryButtonText" xml:space="preserve">
    <value>确定</value>
    <comment>What's new prompt message primary button text</comment>
  </data>
  <data name="WhatsNewDialog.Title" xml:space="preserve">
    <value>这个版本有什么新东西</value>
    <comment>What's new prompt message title</comment>
  </data>
  <data name="WhatsNew_Body.Text" xml:space="preserve">
    <value>Replace the content of this dialog with whatever content is appropriate to your app.
You might want to consider lists of bug fixes and new features.
Don't feel restricted to just text. You can also include images and animations if you wish too.

Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.
Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.
Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.
Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.</value>
    <comment>What's new prompt message body</comment>
  </data>
</root>